# -*- coding: utf-8 -*-
"""ASSIGNMENT03.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HbbxrmTpOMLwHWONC4G1_MhziIlrtCKp

# **Assignment 03**



# **LIST AND TUPLE**

# **Basic List Operations **

1. Create a list of five numbers and append a new number to it. Print the updated list.
"""

number:list = [1 , 2 , 3, 4 , 5]
number.append(100)
print(number)

"""   2. Extend a list [1, 2, 3] with another list [4, 5, 6]. Print the result."""

origin_list:list = [1 , 2 , 3]
origin_list.extend([4 , 5 , 6])
print(origin_list)

""" 3. Insert the string "Python" at index 2 in the list ["Java", "C++", "JavaScript",
"Ruby"].
"""

languages:list = ["java" , "c++" , "javascript" , "ruby"]
languages.insert(2 , "python")
print(languages)

"""4.  Remove the first occurrence of the number 10 from the list [10, 20, 30, 10, 40]."""

number:list = [10 , 20 , 30 , 10 , 40]
number.remove(10)
print(number)

"""5. Use the pop() method to remove the last element from [100, 200, 300, 400] and
print the modified list.
"""

digits:list= [100, 200, 300, 400]
digits.pop(3)
print(digits)

"""# **Intermediate List Operations **


 6. Count how many times the number 5 appears in the list [5, 10, 5, 20, 5, 30].
"""

numbers:list = [5, 10, 5, 20, 5, 30]
count_num = numbers.count(5)
print(count_num)

""" 7. Sort the list [9, 1, 8, 3, 5] in ascending and descending order."""

sorted_list:list = [9, 1, 8, 3, 5]
sorted_list.sort()
print(f"ascending order: {sorted_list}")
sorted_list.sort(reverse=True)
print(f"descending order: {sorted_list}")

"""   8. Reverse the list [“apple”, “banana”, “cherry”] using the reverse() method."""

fruits:list = ["apple" , "banana" , "cherry"]
fruits.reverse()
print(fruits)

"""     9. Create a copy of the list [1, 2, 3, 4, 5] and store it in another variable. Modify the copied list and print both lists."""

original_list = [ 1, 2, 3, 4, 5]
copy_list = original_list.copy()
copy_list.append(50)
print(f"original list: {original_list}")
print(f"copied list: {copy_list}")

"""     10.  Clear all elements from a list [“hello”, “world”, “python”] using the clear() method."""

elements:list = ["hello", "world", "python"]
elements.clear()
print(elements)

"""# **Tuple-Based Questions **

   11. Create a tuple with 5 different fruits and print the third fruit.
"""

fruit:tuple = ("apple" , "mango" , "orange" ,"watermelon" , "grapes")
print(fruit[2])

"""    12. Convert the tuple (10, 20, 30, 40, 50) into a list, remove the number 30, and convert it back into a tuple."""

tuple_list = (10, 20, 30, 40, 50)
tuple_list = list(tuple_list)
tuple_list.remove(30)
print(tuple_list)
print(tuple(tuple_list))

""" 13. . Try to append an element to the tuple (“A”, “B”, “C”). What happens? How can you
modify a tuple indirectly?
"""

# we directtly use append method to show error bcz append has no atribut in tuple.
# How to modify a tuple to use append method
#tuple list convert in list then append method use on list then list convert to tuple


alphabets = ("A" , "B" , "C")
list_alpha = list(alphabets)
list_alpha.append("D")
alphabets = tuple(list_alpha)
print(alphabets)

"""  14. Unpack the tuple (100, 200, 300) into three separate variables and print them."""

num:tuple = (100, 200, 300)
a, b, c  = num
print(a)
print(b)
print(c)

"""  15. . Count the occurrences of 7 in the tuple (7, 1, 7, 3, 7, 5)."""

secnd:tuple = (7, 1, 7, 3, 7, 5)
secnd2 = secnd.count(7)
print(secnd2)

"""# **Advanced Problems **

16.  Write a function that takes a list and returns a new list with all even numbers removed.
"""

def num():
    new_list = [1, 2, 3, 4, 5, 6, 7, 8, 9]
    result = []
    for i in new_list:
        if i % 2 != 0:
            result.append(i)
    return result

print(num())

"""  17.  Create a function that accepts a list and returns a new list with elements sorted in
descending order without using the sort() method.
"""

def sort_descending(lst):
    for i in range(len(lst)):
        max_idx = i
        for j in range(i + 1, len(lst)):
            if lst[j] > lst[max_idx]:
                max_idx = j
        lst[i], lst[max_idx] = lst[max_idx], lst[i]

    return lst


numbers = [4, 2, 9, 1, 5, 6]
print(sort_descending(numbers))

""" 18. . Given a list of numbers, write a program to remove all duplicate elements and print the
unique elements.
"""

def remove_duplicates(lst):
    return list(set(lst))


numbers = [1, 2, 3, 2, 4, 5, 1, 6, 7, 5]
unique_numbers = remove_duplicates(numbers)
print(unique_numbers)

"""  19. 9. Given a tuple of names (“Alice”, “Bob”, “Charlie”, “Alice”, “David”), convert
it into a list, remove duplicates, and convert it back to a tuple.
"""

names = ("Alice", "Bob", "Charlie", "Alice", "David")

names_list = list(names)


unique_names = []
for name in names_list:
    if name not in unique_names:
        unique_names.append(name)


unique_names_tuple = tuple(unique_names)

print(unique_names_tuple)